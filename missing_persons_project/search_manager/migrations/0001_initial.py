# Generated by Django 5.1.7 on 2025-04-04 21:50

import django.contrib.postgres.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core_app', '0002_livevideosource_missingpersonimage_recordedvideo'),
        ('video_processor', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Search',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('paused', 'Paused'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('confidence_threshold', models.FloatField(default=0.6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('missing_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='searches', to='core_app.missingperson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='searches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Search',
                'verbose_name_plural': 'Searches',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Detection',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('confidence_score', models.FloatField()),
                ('detection_time', models.DateTimeField()),
                ('frame_timestamp', models.FloatField()),
                ('frame_number', models.IntegerField(blank=True, null=True)),
                ('frame_url', models.ImageField(blank=True, null=True, upload_to='detections/')),
                ('bbox_x', models.FloatField(blank=True, null=True)),
                ('bbox_y', models.FloatField(blank=True, null=True)),
                ('bbox_width', models.FloatField(blank=True, null=True)),
                ('bbox_height', models.FloatField(blank=True, null=True)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('is_confirmed', models.BooleanField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detections', to='video_processor.video')),
                ('search', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detections', to='search_manager.search')),
            ],
            options={
                'verbose_name': 'Detection',
                'verbose_name_plural': 'Detections',
                'ordering': ['-confidence_score', 'detection_time'],
            },
        ),
        migrations.CreateModel(
            name='SearchVideo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('skipped', 'Skipped')], default='pending', max_length=20)),
                ('processing_start_time', models.DateTimeField(blank=True, null=True)),
                ('processing_end_time', models.DateTimeField(blank=True, null=True)),
                ('priority', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('search', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='search_videos', to='search_manager.search')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='search_videos', to='video_processor.video')),
            ],
            options={
                'verbose_name': 'Search Video',
                'verbose_name_plural': 'Search Videos',
                'ordering': ['-priority', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='FacialEmbedding',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('embedding_vector', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), help_text="Facial embedding vector extracted from the missing person's photo", size=None)),
                ('source_photo', models.ImageField(blank=True, null=True, upload_to='embeddings_sources/')),
                ('quality_score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('missing_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facial_embeddings', to='core_app.missingperson')),
            ],
            options={
                'verbose_name': 'Facial Embedding',
                'verbose_name_plural': 'Facial Embeddings',
                'indexes': [models.Index(fields=['missing_person'], name='search_mana_missing_44b2ba_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='search',
            index=models.Index(fields=['status'], name='search_mana_status_62573b_idx'),
        ),
        migrations.AddIndex(
            model_name='search',
            index=models.Index(fields=['user'], name='search_mana_user_id_737ef2_idx'),
        ),
        migrations.AddIndex(
            model_name='search',
            index=models.Index(fields=['missing_person'], name='search_mana_missing_f4d34a_idx'),
        ),
        migrations.AddIndex(
            model_name='detection',
            index=models.Index(fields=['confidence_score'], name='search_mana_confide_90b3d3_idx'),
        ),
        migrations.AddIndex(
            model_name='detection',
            index=models.Index(fields=['detection_time'], name='search_mana_detecti_aeec0c_idx'),
        ),
        migrations.AddIndex(
            model_name='detection',
            index=models.Index(fields=['search'], name='search_mana_search__fae7aa_idx'),
        ),
        migrations.AddIndex(
            model_name='detection',
            index=models.Index(fields=['video'], name='search_mana_video_i_1bcf9a_idx'),
        ),
        migrations.AddIndex(
            model_name='detection',
            index=models.Index(fields=['is_reviewed'], name='search_mana_is_revi_d7127f_idx'),
        ),
        migrations.AddIndex(
            model_name='searchvideo',
            index=models.Index(fields=['status'], name='search_mana_status_9cac66_idx'),
        ),
        migrations.AddIndex(
            model_name='searchvideo',
            index=models.Index(fields=['search'], name='search_mana_search__25bf69_idx'),
        ),
        migrations.AddIndex(
            model_name='searchvideo',
            index=models.Index(fields=['video'], name='search_mana_video_i_df32b5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='searchvideo',
            unique_together={('search', 'video')},
        ),
    ]
